{\rtf1\ansi\ansicpg1252\cocoartf1671
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red86\green32\blue244;\red0\green0\blue0;\red135\green138\blue4;
\red170\green171\blue37;\red219\green39\blue218;\red56\green185\blue199;\red202\green51\blue35;}
{\*\expandedcolortbl;;\cssrgb\c41680\c25960\c96645;\csgray\c0;\cssrgb\c60000\c60000\c0;
\cssrgb\c72330\c71683\c18597;\cssrgb\c89513\c29738\c88483;\cssrgb\c25544\c77008\c82022;\cssrgb\c83898\c28665\c18024;}
\paperw11900\paperh16840\margl1440\margr1440\vieww14620\viewh13440\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs22 \cf2 \CocoaLigature0 #!/\cf3 \cb4 bin\cf2 \cb1 /bash\cf3 \
\cf2 #SBATCH --job-name=malurus-build\cf3 \
\cf2 #SBATCH --partition=compute\cf3 \
\cf2 #SBATCH --mem=80G\cf3 \
\cf2 #SBATCH --cpus-per-task=1\cf3 \
\cf2 #SBATCH --time=1-0:00:00\cf3 \
\cf2 #SBATCH --ntasks=2\cf3 \
\cf2 ##SBATCH --mail-user=%u@oist.jp\cf3 \
\cf2 ##SBATCH --mail-type=BEGIN,FAIL,END\cf3 \
\cf2 #SBATCH --input=none\cf3 \
\cf2 #SBATCH --output=%j.out\cf3 \
\cf2 ##SBATCH --error=job_%j.err\cf3 \
\cf2 #SBATCH --array=0-163\cf3 \
\
\cf5 . \cf6 $HOME\cf3 /.bashrc\
\
module load bowtie2/2.3.4.3 samtools/1.3.1\
\
\cf7 a\cf3 =\cf6 (\cf3 `\cf5 ls\cf3  \cf8 -1\cf3  /work/MikheyevU/elroy/data/reads/cat-reads/*_R1.fastq.gz`\cf6 )\cf3  \cf2 #group forward reads together\cf3 \
\cf7 b\cf3 =\cf6 (\cf3 `\cf5 ls\cf3  \cf8 -1\cf3  /work/MikheyevU/elroy/data/reads/cat-reads/*_R2.fastq.gz`\cf6 )\cf3  \cf2 #group reverse reads together\cf3 \
\
\cf7 base\cf3 =\cf6 $(basename $\{a[\cf5 "\cf8 SLURM_ARRAY_TASK_ID\cf5 "\cf6 ]\} \cf5 "\cf8 -R1_001.fastq.gz\cf5 "\cf6 )\cf3  \cf2 #set the base name \cf3 \
\cf7 f\cf3 =\cf6 $\{a[\cf5 "\cf8 SLURM_ARRAY_TASK_ID\cf5 "\cf6 ]\}\cf3  \cf2 #give all files from group a the identity f <forward-read>\cf3 \
\cf5 r=\cf6 $\{b[\cf5 "\cf8 SLURM_ARRAY_TASK_ID\cf5 "\cf6 ]\}\cf3  \cf2 #give all files from group b the identity r <reverse-read>\cf3 \
\cf5 echo\cf8  \cf6 $f\cf3 \
\cf5 echo\cf8  \cf6 $r\cf3 \
\
\cf7 bowbase\cf3 =/work/MikheyevU/elroy/reference/genome/superb \cf2 #define the index genome \cf3 \
\cf7 ref\cf3 =/work/MikheyevU/elroy/reference/genome/Malurus_cyaneus__wholegenome_version3.fa \cf2 #define the original reference genome \cf3 \
\
\cf7 outfile\cf3 =/work/MikheyevU/elroy/data/alignments/\cf6 `basename $f -R1_001.fastq.gz`\cf3 .bam \cf2 #define the outfile directory \cf3 \
\
\cf5 if [\cf3  \cf5 -s\cf3  \cf5 "\cf6 $outfile\cf5 "\cf3  \cf5 ]\cf3 \
\cf5 then\cf3 \
        \cf5 echo\cf8  \cf5 "\cf6 $outfile\cf8  has some data.\cf5 "\cf3  \cf2 #tell me if outfile has been successful\cf3 \
        \cf5 sleep\cf3  10s\
\cf5 else\cf3 \
        \cf5 echo\cf8  \cf5 "\cf6 $outfile\cf8  is empty.\cf5 "\cf3  \cf2 #tell me if outfile is unsusccessful \cf3 \
        bowtie2 \cf5 -p\cf3  \cf8 2\cf3  \cf6 --very-sensitive-local\cf3  \cf6 --sam-rg\cf3  ID:\cf6 $base\cf3  \cf6 --sam-rg\cf3  LB:Nextera \cf6 --sam-rg\cf3  SM:\cf6 $base\cf3  \cf6 --sam-rg\cf3  PL:ILLUMINA \cf5 -x\cf3  \cf6 $bowbase\cf3  \cf8 -1\cf3  \cf6 $f\cf3  \cf8 -2\cf3  \cf6 $r\cf3  | samtools view \cf6 -Su\cf3  \cf6 -F4\cf3  - | novosort  \cf5 -c\cf3  \cf8 2\cf3  \cf5 -m\cf3  10G \cf5 -i\cf3  \cf5 -o\cf3  /work/MikheyevU/elroy/data/alignments/\cf6 `basename $f -R1_001.fastq.gz`\cf3 .bam -\
\cf5 fi\cf3 \
\
\cf2 #bowtie2 <options> -x reference -1 <forward read file> -2 <reverse read file>\cf3 \
\cf2 #-p 2: number of alignment threads to launch\cf3 \
\cf2 #--very-sensitive-local: trimming \cf3 \
\cf2 #samtools view -Su -F4: convert output to BAM format. -S denotes .SAM file input, u denotes output is uncompressed BAM file, F4 removes unmapped reads }